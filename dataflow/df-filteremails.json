{
	"name": "df-filteremails",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "FilteredDataJson",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FilterCNET"
				},
				{
					"name": "DerivedColumnDateFormatChange"
				}
			],
			"script": "source(output(\n\t\tregistration_dttm as timestamp,\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tip_address as string,\n\t\tcc as string,\n\t\tcountry as string,\n\t\tbirthdate as string,\n\t\tsalary as double,\n\t\ttitle as string,\n\t\tcomments as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\tformat: 'parquet') ~> source1\nsource1 filter(endsWith(email, \"cnet.com\") == true()) ~> FilterCNET\nFilterCNET derive({birthdate-yyyy-MM-dd} = toDate(birthdate, \"MM/dd/yyyy\")) ~> DerivedColumnDateFormatChange\nDerivedColumnDateFormatChange sink(input(\n\t\tfName as string,\n\t\tlName as string,\n\t\temail as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['OnlyCNET.json'],\n\tmapColumn(\n\t\tregistration_dttm,\n\t\tid,\n\t\tfirst_name,\n\t\tlast_name,\n\t\temail,\n\t\tgender,\n\t\tip_address,\n\t\tcc,\n\t\tcountry,\n\t\tbirthdate = {birthdate-yyyy-MM-dd},\n\t\tsalary,\n\t\ttitle,\n\t\tcomments\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}